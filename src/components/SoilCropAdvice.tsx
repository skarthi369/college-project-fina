import { useState } from "react";
import { useTranslation } from "react-i18next";
import { Button } from "@/components/ui/button";

const DISTRICTS = [
  { code: "chennai", en: "Chennai", ta: "‡Æö‡ØÜ‡Æ©‡Øç‡Æ©‡Øà" },
  { code: "coimbatore", en: "Coimbatore", ta: "‡Æï‡Øã‡ÆØ‡ÆÆ‡Øç‡Æ™‡ØÅ‡Æ§‡Øç‡Æ§‡ØÇ‡Æ∞‡Øç" },
  { code: "madurai", en: "Madurai", ta: "‡ÆÆ‡Æ§‡ØÅ‡Æ∞‡Øà" },
];
const SEASONS = [
  { code: "kuruvai", en: "Kuruvai", ta: "‡Æï‡ØÅ‡Æ∞‡ØÅ‡Æµ‡Øà" },
  { code: "thaladi", en: "Thaladi", ta: "‡Æ§‡Æ≥‡Æü‡Æø" },
  { code: "samba", en: "Samba", ta: "‡Æö‡Ææ‡ÆÆ‡Øç‡Æ™‡Ææ" },
];
const CROP_ADVICE = {
  chennai: {
    kuruvai: {
      crops: [
        { en: "Rice (Kuruvai)", ta: "‡ÆÖ‡Æ∞‡Æø‡Æö‡Æø (‡Æï‡ØÅ‡Æ∞‡ØÅ‡Æµ‡Øà)" },
        { en: "Blackgram", ta: "‡Æâ‡Æ≥‡ØÅ‡Æ®‡Øç‡Æ§‡ØÅ" },
      ],
      advice: {
        en: "Ensure timely irrigation and use short-duration rice varieties.",
        ta: "‡Æ®‡Øá‡Æ∞‡Øç‡ÆÆ‡Øà‡ÆØ‡Ææ‡Æ© ‡Æ™‡Ææ‡Æö‡Æ©‡Æ§‡Øç‡Æ§‡Øà ‡Æâ‡Æ±‡ØÅ‡Æ§‡Æø ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡Æï‡ØÅ‡Æ±‡ØÅ‡Æï‡Æø‡ÆØ ‡Æï‡Ææ‡Æ≤ ‡ÆÖ‡Æ∞‡Æø‡Æö‡Æø ‡Æµ‡Æï‡Øà‡Æï‡Æ≥‡Øà ‡Æ™‡ÆØ‡Æ©‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡Æµ‡ØÅ‡ÆÆ‡Øç.",
      },
    },
    thaladi: {
      crops: [
        { en: "Rice (Thaladi)", ta: "‡ÆÖ‡Æ∞‡Æø‡Æö‡Æø (‡Æ§‡Æ≥‡Æü‡Æø)" },
        { en: "Green gram", ta: "‡Æ™‡ÆØ‡Æ§‡Øç‡Æ§‡ÆÆ‡Øç" },
      ],
      advice: {
        en: "Monitor for pest outbreaks and maintain field drainage.",
        ta: "‡Æ™‡ØÇ‡Æö‡Øç‡Æö‡Æø ‡Æ§‡Ææ‡Æï‡Øç‡Æï‡ØÅ‡Æ§‡Æ≤‡Øà ‡Æï‡Æµ‡Æ©‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡Æµ‡ÆØ‡Æ≤‡Øç ‡Æµ‡Æü‡Æø‡Æï‡Ææ‡Æ≤‡Øç‡Æï‡Æ≥‡Øà ‡Æ™‡Æ∞‡Ææ‡ÆÆ‡Æ∞‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.",
      },
    },
    samba: {
      crops: [
        { en: "Rice (Samba)", ta: "‡ÆÖ‡Æ∞‡Æø‡Æö‡Æø (‡Æö‡Ææ‡ÆÆ‡Øç‡Æ™‡Ææ)" },
        { en: "Groundnut", ta: "‡Æ®‡Æø‡Æ≤‡Æï‡Øç‡Æï‡Æü‡Æ≤‡Øà" },
      ],
      advice: {
        en: "Apply organic manure and follow recommended sowing dates.",
        ta: "‡Æï‡Æ∞‡Æø‡Æï‡Ææ‡Æ≤‡ÆÆ‡Øç ‡Æâ‡Æ∞‡Æô‡Øç‡Æï‡Æ≥‡Øà ‡Æá‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡Æ™‡Æ∞‡Æø‡Æ®‡Øç‡Æ§‡ØÅ‡Æ∞‡Øà‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü ‡Æµ‡Æø‡Æ§‡Øà‡Æ™‡Øç‡Æ™‡ØÅ ‡Æ§‡Øá‡Æ§‡Æø‡Æï‡Æ≥‡Øà ‡Æ™‡Æø‡Æ©‡Øç‡Æ™‡Æ±‡Øç‡Æ±‡Æµ‡ØÅ‡ÆÆ‡Øç.",
      },
    },
  },
  // ... add for other districts
};

export default function SoilCropAdvice() {
  const { t, i18n } = useTranslation();
  const [district, setDistrict] = useState("chennai");
  const [season, setSeason] = useState("kuruvai");
  const [showBothLangs, setShowBothLangs] = useState(false);

  const cropData = CROP_ADVICE[district]?.[season];

  // TTS for advice
  const speak = (text: string, lang: string) => {
    if (!('speechSynthesis' in window)) return;
    const utter = new window.SpeechSynthesisUtterance(text);
    utter.lang = lang;
    window.speechSynthesis.speak(utter);
  };

  return (
    <div className="space-y-6">
      <div className="flex gap-4 items-center mb-4">
        <label>{t("District")}: </label>
        <select value={district} onChange={e => setDistrict(e.target.value)} className="border rounded px-2 py-1">
          {DISTRICTS.map(d => (
            <option key={d.code} value={d.code}>{d.en} / {d.ta}</option>
          ))}
        </select>
        <label>{t("Season")}: </label>
        <select value={season} onChange={e => setSeason(e.target.value)} className="border rounded px-2 py-1">
          {SEASONS.map(s => (
            <option key={s.code} value={s.code}>{s.en} / {s.ta}</option>
          ))}
        </select>
        <label className="ml-4 flex items-center gap-1">
          <input type="checkbox" checked={showBothLangs} onChange={e => setShowBothLangs(e.target.checked)} />
          {t("Show both languages")}
        </label>
      </div>
      {cropData && (
        <div className="space-y-4">
          <div>
            <h3 className="font-bold text-lg mb-2">{t("Recommended Crops")}</h3>
            <ul className="list-disc ml-6">
              {cropData.crops.map((c, idx) => (
                <li key={idx}>
                  {showBothLangs ? `${c.en} / ${c.ta}` : (i18n.language === "ta" ? c.ta : c.en)}
                </li>
              ))}
            </ul>
          </div>
          <div>
            <h3 className="font-bold text-lg mb-2">{t("Farming Advice")}</h3>
            <p>
              {showBothLangs
                ? `${cropData.advice.en}\n${cropData.advice.ta}`
                : (i18n.language === "ta" ? cropData.advice.ta : cropData.advice.en)}
            </p>
            <div className="flex gap-2 mt-2">
              <Button onClick={() => speak(cropData.advice.en, "en-US")}>üîä English</Button>
              <Button onClick={() => speak(cropData.advice.ta, "ta-IN")}>üîä ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç</Button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
} 